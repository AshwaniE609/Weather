{"version":3,"sources":["../../../src/functions/my_bank_api/auth_workflow.ts"],"sourcesContent":["/**\n * This module should export a function which returns authorisation headers to be set in API calls \n * Here is a commented sample axios call to the third party API for retrieving auth tokens\n */\n\n// import { PlainObject, logger } from '@godspeedsystems/core';\n\n// const axios = require('axios');\n// const client = axios.create({\n//   headers: {\n//     'Content-Type': 'application/json',\n//   }\n// });\n\n// module.exports = async function (dsConfig:PlainObject) {\n//   try {\n//     const res = await client({\n//       method: 'post',\n//       url: `${dsConfig.base_url}/anything`,\n//       data: dsConfig.data,\n//       timeout: 5000\n//     });\n//     const headers = {\n//       'X-AUTH-TOKEN': res.data.data.token,\n//     };\n\n//     logger.info(\n//       'Auth token successfully refreshed and following headers set: %o',\n//       Object.keys(headers),\n//     );\n//     return headers;\n//   } catch (error) {\n//     logger.fatal('Error in refreshing token %o', error);\n//     process.exit(1);\n//   }\n// };\nmodule.exports = function (dsConfig: any, ctx: any) {\n    // Note: dsCOnfig is type PlainObject and ctx is type GSContext\n    // When creating proper function you will import them from @godspeedsystems/core\n    // Check the commented code above\n    return {\n        'X-AUTH-TOKEN': 'response_from_auth_endpoint',\n        'X-AUTH-KEY': 'response_from_auth_endpoint'\n    }\n}"],"names":["module","exports","dsConfig","ctx"],"mappings":"AAAA;;;CAGC,GAED,+DAA+D;AAE/D,kCAAkC;AAClC,gCAAgC;AAChC,eAAe;AACf,0CAA0C;AAC1C,MAAM;AACN,MAAM;AAEN,2DAA2D;AAC3D,UAAU;AACV,iCAAiC;AACjC,wBAAwB;AACxB,8CAA8C;AAC9C,6BAA6B;AAC7B,sBAAsB;AACtB,UAAU;AACV,wBAAwB;AACxB,6CAA6C;AAC7C,SAAS;AAET,mBAAmB;AACnB,2EAA2E;AAC3E,8BAA8B;AAC9B,SAAS;AACT,sBAAsB;AACtB,sBAAsB;AACtB,2DAA2D;AAC3D,uBAAuB;AACvB,MAAM;AACN,KAAK;;AACLA,OAAOC,OAAO,GAAG,SAAUC,QAAa,EAAEC,GAAQ;IAC9C,+DAA+D;IAC/D,gFAAgF;IAChF,iCAAiC;IACjC,OAAO;QACH,gBAAgB;QAChB,cAAc;IAClB;AACJ"}